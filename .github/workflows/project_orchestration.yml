name: Project Orchestration Interface

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - generate_roadmap
          - sync_repositories
          - create_project_group
          - list_project_groups
  schedule:
    - cron: '0 0 * * *'  # Daily run

jobs:
  orchestrate-projects:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyGithub sqlalchemy numpy scikit-learn
    
    - name: Perform Orchestration Action
      env:
        GHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
        ACTION: ${{ github.event.inputs.action }}
      run: |
        python - << EOF
import os
import sys
import json
from src.master_project_orchestrator import MasterProjectOrchestrator

def main():
    token = os.environ.get('GHUB_TOKEN')
    action = os.environ.get('ACTION', 'generate_roadmap')
    
    orchestrator = MasterProjectOrchestrator(token)
    
    results = {}
    
    if action == 'generate_roadmap':
        results = orchestrator.generate_project_roadmap()
    elif action == 'sync_repositories':
        results = orchestrator.generate_comprehensive_report()
    
    # Create output directory
    os.makedirs('outputs', exist_ok=True)
    
    # Write results to file
    with open('outputs/orchestration_results.json', 'w') as f:
        json.dump(results, f, indent=2)
    
    print(f"Completed {action} successfully")

if __name__ == '__main__':
    main()
EOF
    
    - name: Upload Orchestration Results
      uses: actions/upload-artifact@v3
      with:
        name: orchestration-results
        path: outputs/orchestration_results.json